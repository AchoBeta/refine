<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/docs/dev-ops/docker-compose-app.yml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/docs/dev-ops/docker-compose-app.yml" />
              <option name="originalContent" value="# /usr/local/bin/docker-compose -f /docs/dev-ops/docker-compose-app.yml up -d&#10;version: '3.8'&#10;# docker-compose -f docker-compose-app.yml up -d&#10;# 你需要修改system为你自身系统的仓库名&#10;services:&#10;  polaris:&#10;    image: ghcr.io/bantanger/achobeta/refine:latest&#10;    container_name: refine&#10;    restart: on-failure&#10;    ports:&#10;      - &quot;8091:8091&quot;&#10;    environment:&#10;      - TZ=PRC&#10;      - SERVER_PORT=8091&#10;      - APP_CONFIG_CROSS_ORIGIN=*&#10;      - REDIS_SDK_CONFIG_HOST=redis&#10;      - REDIS_SDK_CONFIG_PORT=6379&#10;    volumes:&#10;      - ./log:/data/log&#10;    logging:&#10;      driver: &quot;json-file&quot;&#10;      options:&#10;        max-size: &quot;10m&quot;&#10;        max-file: &quot;3&quot;&#10;    networks:&#10;      - my-network&#10;&#10;networks:&#10;  my-network:&#10;    driver: bridge&#10;" />
              <option name="updatedContent" value="# /usr/local/bin/docker-compose -f /docs/dev-ops/docker-compose-app.yml up -d&#10;version: '3.8'&#10;# docker-compose -f docker-compose-app.yml up -d&#10;# 你需要修改system为你自身系统的仓库名&#10;services:&#10;  polaris:&#10;    image: ghcr.io/bantanger/achobeta/refine:latest&#10;    container_name: refine&#10;    restart: on-failure&#10;    ports:&#10;      - &quot;8091:8091&quot;&#10;    environment:&#10;      - TZ=PRC&#10;      - SERVER_PORT=8091&#10;      - APP_CONFIG_CROSS_ORIGIN=*&#10;      - REDIS_SDK_CONFIG_HOST=redis&#10;      - REDIS_SDK_CONFIG_PORT=6379&#10;    volumes:&#10;      - ./log:/data/log&#10;    logging:&#10;      driver: &quot;json-file&quot;&#10;      options:&#10;        max-size: &quot;10m&quot;&#10;        max-file: &quot;3&quot;&#10;    networks:&#10;      - my-network&#10;&#10;networks:&#10;  my-network:&#10;    driver: bridge" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/refine-app/src/main/resources/application-dev.yml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/refine-app/src/main/resources/application-dev.yml" />
              <option name="originalContent" value="server:&#10;  port: 8091&#10;  tomcat:&#10;    threads:&#10;      max: 200        # 设定处理客户请求的线程的最大数目，决定了服务器可以同时响应客户请求的数,默认200&#10;      min-spare: 50   # 初始化线程数,最小空闲线程数,默认是10&#10;    accept-count: 10  # 等待队列长度&#10;&#10;# 应用配置&#10;app:&#10;  config:&#10;    # 版本，方便通过接口版本升级&#10;    api-version: v1&#10;    # 跨域，开发阶段可以设置为 * 不限制&#10;    cross-origin: '*'&#10;&#10;# 线程池配置&#10;thread:&#10;  pool:&#10;    executor:&#10;      config:&#10;        core-pool-size: 20&#10;        max-pool-size: 50&#10;        keep-alive-time: 5000&#10;        block-queue-size: 5000&#10;        policy: CallerRunsPolicy&#10;&#10;# 数据库配置；启动时配置数据库资源信息&#10;spring:&#10;  autoconfigure:&#10;    exclude:&#10;      - org.redisson.spring.starter.RedissonAutoConfiguration&#10;      - org.redisson.spring.starter.RedissonAutoConfigurationV2&#10;  datasource:&#10;    username: root&#10;    password: 123456&#10;    url: jdbc:mysql://127.0.0.1:3306/achobeta-refine?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;zeroDateTimeBehavior=convertToNull&amp;serverTimezone=UTC&amp;useSSL=true&#10;    driver-class-name: com.mysql.cj.jdbc.Driver&#10;  hikari:&#10;    pool-name: Retail_HikariCP&#10;    minimum-idle: 15 #最小空闲连接数量&#10;    idle-timeout: 180000 #空闲连接存活最大时间，默认600000（10分钟）&#10;    maximum-pool-size: 25 #连接池最大连接数，默认是10&#10;    auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true&#10;    max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟&#10;    connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000&#10;    connection-test-query: SELECT 1&#10;  type: com.zaxxer.hikari.HikariDataSource&#10;&#10;# Redis【如需使用请打开】&#10;redis:&#10;  sdk:&#10;    enabled: false&#10;    config:&#10;      host: 127.0.0.1&#10;      port: 6379&#10;      pool-size: 10&#10;      min-idle-size: 5&#10;      idle-timeout: 30000&#10;      connect-timeout: 5000&#10;      retry-attempts: 3&#10;      retry-interval: 1000&#10;      ping-interval: 60000&#10;      keep-alive: true&#10;&#10;# MyBatis 配置【如需使用记得打开】&#10;mybatis:&#10;  mapper-locations: classpath:/mybatis/mapper/*.xml&#10;  config-location:  classpath:/mybatis/config/mybatis-config.xml&#10;&#10;# 日志&#10;logging:&#10;  level:&#10;    root: info&#10;  config: classpath:logback-spring.xml" />
              <option name="updatedContent" value="server:&#10;  port: 8091&#10;  tomcat:&#10;    threads:&#10;      max: 200        # 设定处理客户请求的线程的最大数目，决定了服务器可以同时响应客户请求的数,默认200&#10;      min-spare: 50   # 初始化线程数,最小空闲线程数,默认是10&#10;    accept-count: 10  # 等待队列长度&#10;&#10;# 应用配置&#10;app:&#10;  config:&#10;    # 版本，方便通过接口版本升级&#10;    api-version: v1&#10;    # 跨域，开发阶段可以设置为 * 不限制&#10;    cross-origin: '*'&#10;&#10;# 线程池配置&#10;thread:&#10;  pool:&#10;    executor:&#10;      config:&#10;        core-pool-size: 20&#10;        max-pool-size: 50&#10;        keep-alive-time: 5000&#10;        block-queue-size: 5000&#10;        policy: CallerRunsPolicy&#10;&#10;# 数据库配置；启动时配置数据库资源信息&#10;spring:&#10;  autoconfigure:&#10;    exclude:&#10;      - org.redisson.spring.starter.RedissonAutoConfiguration&#10;      - org.redisson.spring.starter.RedissonAutoConfigurationV2&#10;  datasource:&#10;    username: ${DB_USERNAME:root}&#10;    password: ${DB_PASSWORD:123456}&#10;    url: jdbc:mysql://127.0.0.1:3306/achobeta-refine?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;zeroDateTimeBehavior=convertToNull&amp;serverTimezone=UTC&amp;useSSL=true&#10;    driver-class-name: com.mysql.cj.jdbc.Driver&#10;  hikari:&#10;    pool-name: Retail_HikariCP&#10;    minimum-idle: 15 #最小空闲连接数量&#10;    idle-timeout: 180000 #空闲连接存活最大时间，默认600000（10分钟）&#10;    maximum-pool-size: 25 #连接池最大连接数，默认是10&#10;    auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true&#10;    max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟&#10;    connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000&#10;    connection-test-query: SELECT 1&#10;  type: com.zaxxer.hikari.HikariDataSource&#10;&#10;# Redis【如需使用请打开】&#10;redis:&#10;  sdk:&#10;    enabled: false&#10;    config:&#10;      host: 127.0.0.1&#10;      port: 6379&#10;      pool-size: 10&#10;      min-idle-size: 5&#10;      idle-timeout: 30000&#10;      connect-timeout: 5000&#10;      retry-attempts: 3&#10;      retry-interval: 1000&#10;      ping-interval: 60000&#10;      keep-alive: true&#10;&#10;# MyBatis 配置【如需使用记得打开】&#10;mybatis:&#10;  mapper-locations: classpath:/mybatis/mapper/*.xml&#10;  config-location:  classpath:/mybatis/config/mybatis-config.xml&#10;&#10;# 日志&#10;logging:&#10;  level:&#10;    root: info&#10;  config: classpath:logback-spring.xml" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/refine-app/src/main/resources/application-prod.yml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/refine-app/src/main/resources/application-prod.yml" />
              <option name="originalContent" value="server:&#10;  port: 8091&#10;  tomcat:&#10;    threads:&#10;      max: 200        # 设定处理客户请求的线程的最大数目，决定了服务器可以同时响应客户请求的数,默认200&#10;      min-spare: 50   # 初始化线程数,最小空闲线程数,默认是10&#10;    accept-count: 10  # 等待队列长度&#10;&#10;# 应用配置&#10;app:&#10;  config:&#10;    # 版本，方便通过接口版本升级&#10;    api-version: v1&#10;    # 跨域，开发阶段可以设置为 * 不限制&#10;    cross-origin: '*'&#10;&#10;# 线程池配置&#10;thread:&#10;  pool:&#10;    executor:&#10;      config:&#10;        core-pool-size: 20&#10;        max-pool-size: 50&#10;        keep-alive-time: 5000&#10;        block-queue-size: 5000&#10;        policy: CallerRunsPolicy&#10;&#10;# 数据库配置；启动时配置数据库资源信息&#10;spring:&#10;  datasource:&#10;    username: root&#10;    password: 123456&#10;    url: jdbc:mysql://mysql:3306/achobeta-polaris?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;zeroDateTimeBehavior=convertToNull&amp;serverTimezone=UTC&amp;useSSL=true&#10;    driver-class-name: com.mysql.cj.jdbc.Driver&#10;  hikari:&#10;    pool-name: Retail_HikariCP&#10;    minimum-idle: 15 #最小空闲连接数量&#10;    idle-timeout: 180000 #空闲连接存活最大时间，默认600000（10分钟）&#10;    maximum-pool-size: 25 #连接池最大连接数，默认是10&#10;    auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true&#10;    max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟&#10;    connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000&#10;    connection-test-query: SELECT 1&#10;  type: com.zaxxer.hikari.HikariDataSource&#10;&#10;# Redis【如需使用请打开】&#10;redis:&#10;  sdk:&#10;    config:&#10;      host: redis&#10;      port: 6379&#10;      pool-size: 10&#10;      min-idle-size: 5&#10;      idle-timeout: 30000&#10;      connect-timeout: 5000&#10;      retry-attempts: 3&#10;      retry-interval: 1000&#10;      ping-interval: 60000&#10;      keep-alive: true&#10;&#10;# MyBatis 配置【如需使用记得打开】&#10;mybatis:&#10;  mapper-locations: classpath:/mybatis/mapper/*.xml&#10;  config-location:  classpath:/mybatis/config/mybatis-config.xml&#10;&#10;# 日志&#10;logging:&#10;  level:&#10;    root: info&#10;  config: classpath:logback-spring.xml" />
              <option name="updatedContent" value="server:&#10;  port: 8091&#10;  tomcat:&#10;    threads:&#10;      max: 200        # 设定处理客户请求的线程的最大数目，决定了服务器可以同时响应客户请求的数,默认200&#10;      min-spare: 50   # 初始化线程数,最小空闲线程数,默认是10&#10;    accept-count: 10  # 等待队列长度&#10;&#10;# 应用配置&#10;app:&#10;  config:&#10;    # 版本，方便通过接口版本升级&#10;    api-version: v1&#10;    # 跨域，开发阶段可以设置为 * 不限制&#10;    cross-origin: '*'&#10;&#10;# 线程池配置&#10;thread:&#10;  pool:&#10;    executor:&#10;      config:&#10;        core-pool-size: 20&#10;        max-pool-size: 50&#10;        keep-alive-time: 5000&#10;        block-queue-size: 5000&#10;        policy: CallerRunsPolicy&#10;&#10;# 数据库配置；启动时配置数据库资源信息&#10;spring:&#10;  datasource:&#10;    username: ${DB_USERNAME:root}&#10;    password: ${DB_PASSWORD:123456}&#10;    url: jdbc:mysql://mysql:3306/achobeta-polaris?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;zeroDateTimeBehavior=convertToNull&amp;serverTimezone=UTC&amp;useSSL=true&#10;    driver-class-name: com.mysql.cj.jdbc.Driver&#10;  hikari:&#10;    pool-name: Retail_HikariCP&#10;    minimum-idle: 15 #最小空闲连接数量&#10;    idle-timeout: 180000 #空闲连接存活最大时间，默认600000（10分钟）&#10;    maximum-pool-size: 25 #连接池最大连接数，默认是10&#10;    auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true&#10;    max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟&#10;    connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000&#10;    connection-test-query: SELECT 1&#10;  type: com.zaxxer.hikari.HikariDataSource&#10;&#10;# Redis【如需使用请打开】&#10;redis:&#10;  sdk:&#10;    config:&#10;      host: redis&#10;      port: 6379&#10;      pool-size: 10&#10;      min-idle-size: 5&#10;      idle-timeout: 30000&#10;      connect-timeout: 5000&#10;      retry-attempts: 3&#10;      retry-interval: 1000&#10;      ping-interval: 60000&#10;      keep-alive: true&#10;&#10;# MyBatis 配置【如需使用记得打开】&#10;mybatis:&#10;  mapper-locations: classpath:/mybatis/mapper/*.xml&#10;  config-location:  classpath:/mybatis/config/mybatis-config.xml&#10;&#10;# 日志&#10;logging:&#10;  level:&#10;    root: info&#10;  config: classpath:logback-spring.xml" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>